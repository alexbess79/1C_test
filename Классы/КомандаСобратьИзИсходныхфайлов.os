#Использовать logos

Перем Лог;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт

    ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Сборка cf из исходников");
    Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "src", "Каталог исходников");
    Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-v8version", "Версия платформы для загрузки исходников");
    Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт

    Каталог = ПараметрыКоманды["src"];
    Версия  = ПараметрыКоманды["-v8version"];

    СобратьИзИсходниковТекущуюКонфигурацию(Каталог, Версия);

    Возврат 0;

КонецФункции

Процедура СобратьИзИсходниковТекущуюКонфигурацию(Знач ВходнойКаталог, Знач ВерсияПлатформы = "") 

    КаталогВыгрузки = Новый Файл(ВходнойКаталог); 
    Если КаталогВыгрузки.Существует() = Ложь ИЛИ КаталогВыгрузки.ЭтоФайл() Тогда
        ВызватьИсключение СтрШаблон("Каталог исходников %1 не найден или является файлом", КаталогВыгрузки.ПолноеИмя);
    КонецЕсли;

    Конфигуратор = ОкружениеСборки.ПолучитьКонфигуратор();
        
    Если Не ПустаяСтрока(ВерсияПлатформы) Тогда 
        Конфигуратор.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);
    КонецЕсли;

    ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
    ПараметрыЗапуска.Добавить("/Visible");
    ПараметрыЗапуска.Добавить(СтрШаблон("/LoadConfigFromFiles ""%1""", ВходнойКаталог));
    Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
    Лог.Информация("Загрузка исходников выполнена. %1", Конфигуратор.ВыводКоманды());
    Конфигуратор.ОбновитьКонфигурациюБазыДанных();
    Лог.Информация(Конфигуратор.ВыводКоманды() + "
    |Конфигурация базы данных обновлена");

КонецПроцедуры

Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());
