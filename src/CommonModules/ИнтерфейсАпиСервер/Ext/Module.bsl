// Создает таблицу для передачи данных о ценах номенклатуры контрагентов
//
Функция ИнициализироватьТаблицуЦенНоменклатурыКонтрагентов() Экспорт
	
	ТаблицаЦен = Новый ТаблицаЗначений;
	//ТаблицаЦен.Колонки.Добавить("Индекс",Новый ОписаниеТипов("Дата")); 
	ТаблицаЦен.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаЦен.Колонки.Добавить("НоменклатураКонтрагента",Новый ОписаниеТипов("СправочникСсылка.НоменклатураКонтрагентов"));
	ТаблицаЦен.Колонки.Добавить("КодНоменклатурыКонтрагента",Новый ОписаниеТипов("Строка")); 
	ТаблицаЦен.Колонки.Добавить("Цена",Новый ОписаниеТипов("Число")); 
	ТаблицаЦен.Колонки.Добавить("ДатаАктуальности",Новый ОписаниеТипов("Дата")); 
	ТаблицаЦен.Колонки.Добавить("ВладелецНоменклатуры",Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ВладелецНоменклатурыБЭД.Тип)); 
	ТаблицаЦен.Колонки.Добавить("МодульМенеджераАПИ",Новый ОписаниеТипов("Строка")); 
	
	Возврат ТаблицаЦен;
КонецФункции // СоздатьТаблицуЦенНоменклатурыКонтрагентов()


//Формирует таблицу 
Функция ЗаполнитьТаблицуЦенПоЗаказу(ЗаказКлиента) Экспорт
	// Вставить содержимое обработчика.  
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказКлиентаТовары.КоличествоУпаковок) КАК КоличествоВЗаказе
	|ПОМЕСТИТЬ ТоварыЗаказа
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка = &СсылкаНаЗаказ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКонтрагентов.Ссылка КАК НоменклатураКонтрагента,
	|	НоменклатураКонтрагентов.Владелец КАК ВладелецНоменклатуры,
	|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТоварыКонтрагентов
	|ИЗ
	|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураКонтрагентов.Владелец,
	|	НоменклатураКонтрагентов.Ссылка,
	|	НоменклатураКонтрагентов.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКонтрагентов.ВладелецНоменклатуры КАК Поставщик
	|ИЗ
	|	ТоварыКонтрагентов КАК ТоварыКонтрагентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыЗаказа.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТоварыКонтрагентов.НоменклатураКонтрагента, ЗНАЧЕНИЕ(Справочник.НоменклатураКонтрагентов.ПустаяСсылка)) КАК НоменклатураКонтрагента,
	|	ТоварыЗаказа.КоличествоВЗаказе КАК КоличествоВЗаказе,
	|	ТоварыКонтрагентов.НоменклатураКонтрагента.КодНоменклатуры КАК КодНоменклатурыКонтрагента,
	|	ТоварыКонтрагентов.ВладелецНоменклатуры КАК ВладелецНоменклатуры
	|ИЗ
	|	ТоварыЗаказа КАК ТоварыЗаказа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКонтрагентов КАК ТоварыКонтрагентов
	|		ПО ТоварыЗаказа.Номенклатура = ТоварыКонтрагентов.Номенклатура
	|ИТОГИ
	|	СУММА(КоличествоВЗаказе)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("СсылкаНаЗаказ", ЗаказКлиента);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	//ВыборкаПоставщик = РезультатЗапроса[2].Выбрать(); //Выборка всех поставщиков по номенклатуре заказа
	
	ТаблицаЦен = ИнтерфейсАпиСервер.ИнициализироватьТаблицуЦенНоменклатурыКонтрагентов();
	ВыборкаТовары = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаТовары.Следующий() Цикл //Создаем строки с номенклатурой и заполняем цены и номенклатуру поставщиков
		
		ДетальныеЗаписи = ВыборкаТовары.Выбрать();
		Пока ДетальныеЗаписи.Следующий() Цикл     
			
			Если ЗначениеЗаполнено(ДетальныеЗаписи.НоменклатураКонтрагента) Тогда
				СтрокаТаблицыЦен = ТаблицаЦен.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЦен,ДетальныеЗаписи);
				СтрокаТаблицыЦен.ДатаАктуальности = ТекущаяДата();
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаЦен;
КонецФункции // ОбновитьТаблицуЦенЗаказаПоТаличнойЧасти()

//Создает таблицу цен и добавляет туда строки по всем поставщикам 
//по которым есть связи с данной номенклатуре или массиву номенклатур
// <Описание функции>
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура по которой нужна таблица
//                 Массив 						 - массив ссылок по номенклатуре
//  ВладелецНоменклатуры  - ОпределяемыйТип.ВладелецНоменклатурыБЭД - Контрагент по которому нужны связи
//                		- Массив				 - массив контрагентов для фильтрации
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица значений со всеми позициями номенклатуры
//

Функция ЗаполнитьТаблицуЦенПоНоменклатуре(Номенклатура,ВладелецНоменклатуры = Неопределено) Экспорт
	ТаблицаЦен = ИнтерфейсАпиСервер.ИнициализироватьТаблицуЦенНоменклатурыКонтрагентов();
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НоменклатураКонтрагентов.Номенклатура КАК Номенклатура,
		|	НоменклатураКонтрагентов.Ссылка КАК НоменклатураКонтрагента,
		|	НоменклатураКонтрагентов.КодНоменклатуры КАК КодНоменклатурыКонтрагента,
		|	0 КАК Цена,
		|	НоменклатураКонтрагентов.Владелец КАК ВладелецНоменклатуры
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.Номенклатура В(&Номенклатура)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаТаблицыЦен = ТаблицаЦен.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыЦен,ВыборкаДетальныеЗаписи);
		СтрокаТаблицыЦен.ДатаАктуальности = ТекущаяДата();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат ТаблицаЦен;     
	
КонецФункции        


// Функция вызывает соответствующие обработки для каждого Партнера, который предоставляет цены
// Цены 
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ЗаполнитьЦеныНоменклатурыВТаблице(ТаблицаЦен)
	
	ТаблицаМодулейМенеджераАПИ = ТаблицаЦен.Скопировать(,"ВладелецНоменклатуры,МодульМенеджераАПИ");
	ТаблицаМодулейМенеджераАПИ.Свернуть("ВладелецНоменклатуры,МодульМенеджераАПИ");
	
	Для Каждого СтрокаТаблицы из ТаблицаМодулейМенеджераАПИ Цикл
//	    МодульМенеджераАпи = Обработки["ИнтерфейсAPIРусскийСвет"];
	    МодульМенеджераАпи = Обработки[СтрокаТаблицы.МодульМенеджераАПИ];
		МодульМенеджераАпи.ЗаполнитьЦеныНоменклатурыВТаблице(ТаблицаЦен,СтрокаТаблицы.ВладелецНоменклатуры);
	КонецЦикла;
	

КонецФункции // ЗаполнитьЦеныНоменклатурыВТаблице(ТаблицаЦен)()
