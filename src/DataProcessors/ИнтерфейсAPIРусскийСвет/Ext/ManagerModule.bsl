//Обработка служит стандартным интерфейсом для каждого поставщика

// Возвращает цены номенклатуры поставщика через API
//
// Параметры:
//  ТаблицаЦен  - ТаблицаЗначений в которой нужно заполнить колонку цена
//
// Возвращаемое значение:
//   Что то надо ве   - таблица цен 
//
Функция ЗаполнитьЦеныНоменклатурыВТаблице(ТаблицаЦен) Экспорт

    СтруктураПараметров = ПолучитьСтруктуруПараметров();
	
//Создаем соединение с сервером API
	Соединение = Новый HTTPСоединение(
	    СтруктураПараметров.rs_host, // сервер (хост)
        443, // порт, по умолчанию для http используется 80, для https 443
        , // пользователь для доступа к серверу (если он есть)
        , // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        , // таймаут в секундах, 0 или пусто - не устанавливать
          Новый ЗащищенноеСоединениеOpenSSL()// защищенное соединение, если используется https
    );
	
	Заголовки = Новый Соответствие;    
	Заголовки.Вставить("Content-Type", "application/json"); 
	Заголовки.Вставить("Authorization", СтруктураПараметров.Authorization);
	
	
	ДанныJSON = Новый Структура;
	ДанныJSON.Вставить("items",ТаблицаЦен.ВыгрузитьКолонку("КодНоменклатурыКонтрагента"));
	//МассивКодНоменклатурыКонтрагента = ТаблицаЦен.ВыгрузитьКолонку("КодНоменклатурыКонтрагента");
	//
	//items = Новый ФиксированныйМассив(МассивКодНоменклатурыКонтрагента);

	
	ЗаписьJSON = Новый ЗаписьJSON;
  	ЗаписьJSON.УстановитьСтроку();
 	ЗаписатьJSON(ЗаписьJSON,ДанныJSON);
	ТелоЗапроса = ЗаписьJSON.Закрыть();  
	
	    
	Запрос = Новый HTTPЗапрос(СтруктураПараметров.massprice_url, Заголовки);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);

	ОтветHTTP = Соединение.ВызватьHTTPМетод("POST", Запрос);
	Если ОтветHTTP.КодСостояния <> 200 Тогда
		Возврат Ложь;
	КонецЕсли;	
    СтрокаJSON = ОтветHTTP.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	МассивПредложений = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	Для каждого СтруктураПредложения из МассивПредложений Цикл
		СтрокаТаблицы = ТаблицаЦен.Найти(СтруктураПредложения.RSCode,"КодНоменклатурыКонтрагента");
		ПолученнаяЦена = 0;
		СтруктураПредложения.Price.Свойство("Personal_w_VAT",ПолученнаяЦена); 
		
		Если ПолученнаяЦена<>Неопределено Тогда
			СтрокаТаблицы.Цена = ПолученнаяЦена;
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат Истина;

КонецФункции // ПолучитьЦеныНоменклатуры()


//Функция возвращает структуру параметров которые нужны для работы обработки
//Логин пароль 
//Адрес сервера 
// и т.д. все что может понадобится
//Вынесено чтобы не менять их в коде.
Функция ПолучитьСтруктуруПараметров()
   //Пока все параметры в рукопашку заполняем
	СтруктураПараметры = Новый Структура;  
	
    //Строка авторизации для заголовка HTTP запросов в формате Base64
	//Для примера мой логин и пароль
	AuthorizationBase64 = "Basic "+Base64Строка(ПолучитьДвоичныеДанныеИзСтроки("105@306330.ru:95JBO53T"));

	СтруктураПараметры.Вставить("Authorization",AuthorizationBase64);
	
	СтруктураПараметры.Вставить("rs_host","cdis.russvet.ru"); 
	СтруктураПараметры.Вставить("massprice_url","/rs/massprice");
	
   Возврат СтруктураПараметры;
   
КонецФункции // ПолучитьСтруктуруПараметров()

